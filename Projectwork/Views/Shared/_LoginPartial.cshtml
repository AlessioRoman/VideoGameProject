@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="flex gap-20">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
            <a id="manage" class="nav-link text-dark fs-5 fw-bolder" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">ACCOUNT</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Customer", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark fs-5 fw-bolder">LOGOUT</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
            <a class="nav-link text-dark fs-5 fw-bolder id="register" asp-area="Identity" asp-page="/Account/Register">REGISTER</a>
    </li>
    <li class="nav-item">
            <a class="nav-link text-dark fs-5 fw-bolder" id="login" asp-area="Identity" asp-page="/Account/Login">LOGIN</a>
    </li>
}
</ul>
